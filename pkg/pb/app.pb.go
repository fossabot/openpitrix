// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateAppRequest struct {
	X           *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=_" json:"_,omitempty"`
	Name        *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RepoId      *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=repo_id,json=repoId" json:"repo_id,omitempty"`
	Owner       *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ChartName   *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=chart_name,json=chartName" json:"chart_name,omitempty"`
	Description *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Home        *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=home" json:"home,omitempty"`
	Icon        *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=icon" json:"icon,omitempty"`
	Screenshots *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=screenshots" json:"screenshots,omitempty"`
	Maintainers *google_protobuf2.StringValue `protobuf:"bytes,11,opt,name=maintainers" json:"maintainers,omitempty"`
	Sources     *google_protobuf2.StringValue `protobuf:"bytes,12,opt,name=sources" json:"sources,omitempty"`
	Readme      *google_protobuf2.StringValue `protobuf:"bytes,13,opt,name=readme" json:"readme,omitempty"`
	CategoryId  *google_protobuf2.StringValue `protobuf:"bytes,14,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *CreateAppRequest) Reset()                    { *m = CreateAppRequest{} }
func (m *CreateAppRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAppRequest) ProtoMessage()               {}
func (*CreateAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CreateAppRequest) GetX() *google_protobuf2.StringValue {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *CreateAppRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateAppRequest) GetRepoId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *CreateAppRequest) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *CreateAppRequest) GetChartName() *google_protobuf2.StringValue {
	if m != nil {
		return m.ChartName
	}
	return nil
}

func (m *CreateAppRequest) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateAppRequest) GetHome() *google_protobuf2.StringValue {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *CreateAppRequest) GetIcon() *google_protobuf2.StringValue {
	if m != nil {
		return m.Icon
	}
	return nil
}

func (m *CreateAppRequest) GetScreenshots() *google_protobuf2.StringValue {
	if m != nil {
		return m.Screenshots
	}
	return nil
}

func (m *CreateAppRequest) GetMaintainers() *google_protobuf2.StringValue {
	if m != nil {
		return m.Maintainers
	}
	return nil
}

func (m *CreateAppRequest) GetSources() *google_protobuf2.StringValue {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *CreateAppRequest) GetReadme() *google_protobuf2.StringValue {
	if m != nil {
		return m.Readme
	}
	return nil
}

func (m *CreateAppRequest) GetCategoryId() *google_protobuf2.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

type CreateAppResponse struct {
	App *App `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (m *CreateAppResponse) Reset()                    { *m = CreateAppResponse{} }
func (m *CreateAppResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAppResponse) ProtoMessage()               {}
func (*CreateAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateAppResponse) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

type ModifyAppRequest struct {
	AppId       *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Name        *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RepoId      *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=repo_id,json=repoId" json:"repo_id,omitempty"`
	Owner       *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ChartName   *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=chart_name,json=chartName" json:"chart_name,omitempty"`
	Description *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Home        *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=home" json:"home,omitempty"`
	Icon        *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=icon" json:"icon,omitempty"`
	Screenshots *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=screenshots" json:"screenshots,omitempty"`
	Maintainers *google_protobuf2.StringValue `protobuf:"bytes,11,opt,name=maintainers" json:"maintainers,omitempty"`
	Sources     *google_protobuf2.StringValue `protobuf:"bytes,12,opt,name=sources" json:"sources,omitempty"`
	Readme      *google_protobuf2.StringValue `protobuf:"bytes,13,opt,name=readme" json:"readme,omitempty"`
	CategoryId  *google_protobuf2.StringValue `protobuf:"bytes,14,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *ModifyAppRequest) Reset()                    { *m = ModifyAppRequest{} }
func (m *ModifyAppRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyAppRequest) ProtoMessage()               {}
func (*ModifyAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ModifyAppRequest) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *ModifyAppRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyAppRequest) GetRepoId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *ModifyAppRequest) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ModifyAppRequest) GetChartName() *google_protobuf2.StringValue {
	if m != nil {
		return m.ChartName
	}
	return nil
}

func (m *ModifyAppRequest) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyAppRequest) GetHome() *google_protobuf2.StringValue {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *ModifyAppRequest) GetIcon() *google_protobuf2.StringValue {
	if m != nil {
		return m.Icon
	}
	return nil
}

func (m *ModifyAppRequest) GetScreenshots() *google_protobuf2.StringValue {
	if m != nil {
		return m.Screenshots
	}
	return nil
}

func (m *ModifyAppRequest) GetMaintainers() *google_protobuf2.StringValue {
	if m != nil {
		return m.Maintainers
	}
	return nil
}

func (m *ModifyAppRequest) GetSources() *google_protobuf2.StringValue {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *ModifyAppRequest) GetReadme() *google_protobuf2.StringValue {
	if m != nil {
		return m.Readme
	}
	return nil
}

func (m *ModifyAppRequest) GetCategoryId() *google_protobuf2.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

type ModifyAppResponse struct {
	App *App `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (m *ModifyAppResponse) Reset()                    { *m = ModifyAppResponse{} }
func (m *ModifyAppResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyAppResponse) ProtoMessage()               {}
func (*ModifyAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ModifyAppResponse) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

type DeleteAppRequest struct {
	AppId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *DeleteAppRequest) Reset()                    { *m = DeleteAppRequest{} }
func (m *DeleteAppRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppRequest) ProtoMessage()               {}
func (*DeleteAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DeleteAppRequest) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

type DeleteAppResponse struct {
	App *App `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (m *DeleteAppResponse) Reset()                    { *m = DeleteAppResponse{} }
func (m *DeleteAppResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppResponse) ProtoMessage()               {}
func (*DeleteAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DeleteAppResponse) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

type App struct {
	AppId          *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Name           *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RepoId         *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=repo_id,json=repoId" json:"repo_id,omitempty"`
	Description    *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Status         *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Home           *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=home" json:"home,omitempty"`
	Icon           *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=icon" json:"icon,omitempty"`
	Screenshots    *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=screenshots" json:"screenshots,omitempty"`
	Maintainers    *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=maintainers" json:"maintainers,omitempty"`
	Sources        *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=sources" json:"sources,omitempty"`
	Readme         *google_protobuf2.StringValue `protobuf:"bytes,11,opt,name=readme" json:"readme,omitempty"`
	ChartName      *google_protobuf2.StringValue `protobuf:"bytes,12,opt,name=chart_name,json=chartName" json:"chart_name,omitempty"`
	Owner          *google_protobuf2.StringValue `protobuf:"bytes,13,opt,name=owner" json:"owner,omitempty"`
	CreateTime     *google_protobuf3.Timestamp   `protobuf:"bytes,14,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime     *google_protobuf3.Timestamp   `protobuf:"bytes,15,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	UpdateTime     *google_protobuf3.Timestamp   `protobuf:"bytes,16,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	AppCategorySet []*AppCategory                `protobuf:"bytes,17,rep,name=app_category_set,json=appCategorySet" json:"app_category_set,omitempty"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *App) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *App) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *App) GetRepoId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *App) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *App) GetStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *App) GetHome() *google_protobuf2.StringValue {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *App) GetIcon() *google_protobuf2.StringValue {
	if m != nil {
		return m.Icon
	}
	return nil
}

func (m *App) GetScreenshots() *google_protobuf2.StringValue {
	if m != nil {
		return m.Screenshots
	}
	return nil
}

func (m *App) GetMaintainers() *google_protobuf2.StringValue {
	if m != nil {
		return m.Maintainers
	}
	return nil
}

func (m *App) GetSources() *google_protobuf2.StringValue {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *App) GetReadme() *google_protobuf2.StringValue {
	if m != nil {
		return m.Readme
	}
	return nil
}

func (m *App) GetChartName() *google_protobuf2.StringValue {
	if m != nil {
		return m.ChartName
	}
	return nil
}

func (m *App) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *App) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *App) GetStatusTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *App) GetUpdateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *App) GetAppCategorySet() []*AppCategory {
	if m != nil {
		return m.AppCategorySet
	}
	return nil
}

type AppCategory struct {
	CategoryId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Locale     *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=locale" json:"locale,omitempty"`
	Status     *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	CreateTime *google_protobuf3.Timestamp   `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime *google_protobuf3.Timestamp   `protobuf:"bytes,6,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *AppCategory) Reset()                    { *m = AppCategory{} }
func (m *AppCategory) String() string            { return proto.CompactTextString(m) }
func (*AppCategory) ProtoMessage()               {}
func (*AppCategory) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *AppCategory) GetCategoryId() *google_protobuf2.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *AppCategory) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AppCategory) GetLocale() *google_protobuf2.StringValue {
	if m != nil {
		return m.Locale
	}
	return nil
}

func (m *AppCategory) GetStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AppCategory) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *AppCategory) GetStatusTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type Category struct {
	CategoryId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Locale     *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=locale" json:"locale,omitempty"`
	Owner      *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	CreateTime *google_protobuf3.Timestamp   `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	UpdateTime *google_protobuf3.Timestamp   `protobuf:"bytes,6,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (m *Category) Reset()                    { *m = Category{} }
func (m *Category) String() string            { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()               {}
func (*Category) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Category) GetCategoryId() *google_protobuf2.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *Category) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Category) GetLocale() *google_protobuf2.StringValue {
	if m != nil {
		return m.Locale
	}
	return nil
}

func (m *Category) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Category) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Category) GetUpdateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type DescribeAppsRequest struct {
	SearchWord   *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Limit        uint32                        `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset       uint32                        `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	AppId        []string                      `protobuf:"bytes,4,rep,name=app_id,json=appId" json:"app_id,omitempty"`
	Name         []string                      `protobuf:"bytes,5,rep,name=name" json:"name,omitempty"`
	RepoId       []string                      `protobuf:"bytes,6,rep,name=repo_id,json=repoId" json:"repo_id,omitempty"`
	Status       []string                      `protobuf:"bytes,7,rep,name=status" json:"status,omitempty"`
	Owner        []string                      `protobuf:"bytes,8,rep,name=owner" json:"owner,omitempty"`
	ChartName    []string                      `protobuf:"bytes,9,rep,name=chart_name,json=chartName" json:"chart_name,omitempty"`
	CategoryId   []string                      `protobuf:"bytes,10,rep,name=category_id,json=categoryId" json:"category_id,omitempty"`
	CategoryName []string                      `protobuf:"bytes,11,rep,name=category_name,json=categoryName" json:"category_name,omitempty"`
}

func (m *DescribeAppsRequest) Reset()                    { *m = DescribeAppsRequest{} }
func (m *DescribeAppsRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeAppsRequest) ProtoMessage()               {}
func (*DescribeAppsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *DescribeAppsRequest) GetSearchWord() *google_protobuf2.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeAppsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeAppsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeAppsRequest) GetAppId() []string {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeAppsRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DescribeAppsRequest) GetRepoId() []string {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *DescribeAppsRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeAppsRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *DescribeAppsRequest) GetChartName() []string {
	if m != nil {
		return m.ChartName
	}
	return nil
}

func (m *DescribeAppsRequest) GetCategoryId() []string {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *DescribeAppsRequest) GetCategoryName() []string {
	if m != nil {
		return m.CategoryName
	}
	return nil
}

type DescribeAppsResponse struct {
	TotalCount uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	AppSet     []*App `protobuf:"bytes,2,rep,name=app_set,json=appSet" json:"app_set,omitempty"`
}

func (m *DescribeAppsResponse) Reset()                    { *m = DescribeAppsResponse{} }
func (m *DescribeAppsResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeAppsResponse) ProtoMessage()               {}
func (*DescribeAppsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *DescribeAppsResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeAppsResponse) GetAppSet() []*App {
	if m != nil {
		return m.AppSet
	}
	return nil
}

type CreateAppVersionRequest struct {
	X           *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=_" json:"_,omitempty"`
	AppId       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Owner       *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	Name        *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	PackageName *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	Description *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
}

func (m *CreateAppVersionRequest) Reset()                    { *m = CreateAppVersionRequest{} }
func (m *CreateAppVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAppVersionRequest) ProtoMessage()               {}
func (*CreateAppVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *CreateAppVersionRequest) GetX() *google_protobuf2.StringValue {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *CreateAppVersionRequest) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *CreateAppVersionRequest) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *CreateAppVersionRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateAppVersionRequest) GetPackageName() *google_protobuf2.StringValue {
	if m != nil {
		return m.PackageName
	}
	return nil
}

func (m *CreateAppVersionRequest) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

type CreateAppVersionResponse struct {
	AppVersion *AppVersion `protobuf:"bytes,1,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *CreateAppVersionResponse) Reset()                    { *m = CreateAppVersionResponse{} }
func (m *CreateAppVersionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAppVersionResponse) ProtoMessage()               {}
func (*CreateAppVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *CreateAppVersionResponse) GetAppVersion() *AppVersion {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

type ModifyAppVersionRequest struct {
	VersionId   *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	Name        *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PackageName *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	Owner       *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	Description *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *ModifyAppVersionRequest) Reset()                    { *m = ModifyAppVersionRequest{} }
func (m *ModifyAppVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyAppVersionRequest) ProtoMessage()               {}
func (*ModifyAppVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ModifyAppVersionRequest) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *ModifyAppVersionRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyAppVersionRequest) GetPackageName() *google_protobuf2.StringValue {
	if m != nil {
		return m.PackageName
	}
	return nil
}

func (m *ModifyAppVersionRequest) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ModifyAppVersionRequest) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

type ModifyAppVersionResponse struct {
	AppVersion *AppVersion `protobuf:"bytes,1,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *ModifyAppVersionResponse) Reset()                    { *m = ModifyAppVersionResponse{} }
func (m *ModifyAppVersionResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyAppVersionResponse) ProtoMessage()               {}
func (*ModifyAppVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ModifyAppVersionResponse) GetAppVersion() *AppVersion {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

type DeleteAppVersionRequest struct {
	VersionId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
}

func (m *DeleteAppVersionRequest) Reset()                    { *m = DeleteAppVersionRequest{} }
func (m *DeleteAppVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppVersionRequest) ProtoMessage()               {}
func (*DeleteAppVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *DeleteAppVersionRequest) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

type DeleteAppVersionResponse struct {
	AppVersion *AppVersion `protobuf:"bytes,1,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *DeleteAppVersionResponse) Reset()                    { *m = DeleteAppVersionResponse{} }
func (m *DeleteAppVersionResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppVersionResponse) ProtoMessage()               {}
func (*DeleteAppVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *DeleteAppVersionResponse) GetAppVersion() *AppVersion {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

type AppVersion struct {
	VersionId   *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	AppId       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Owner       *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	Name        *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Description *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	PackageName *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	Status      *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	CreateTime  *google_protobuf3.Timestamp   `protobuf:"bytes,8,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime  *google_protobuf3.Timestamp   `protobuf:"bytes,9,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	UpdateTime  *google_protobuf3.Timestamp   `protobuf:"bytes,10,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (m *AppVersion) Reset()                    { *m = AppVersion{} }
func (m *AppVersion) String() string            { return proto.CompactTextString(m) }
func (*AppVersion) ProtoMessage()               {}
func (*AppVersion) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *AppVersion) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *AppVersion) GetAppId() *google_protobuf2.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *AppVersion) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *AppVersion) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AppVersion) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *AppVersion) GetPackageName() *google_protobuf2.StringValue {
	if m != nil {
		return m.PackageName
	}
	return nil
}

func (m *AppVersion) GetStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AppVersion) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *AppVersion) GetStatusTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *AppVersion) GetUpdateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type DescribeAppVersionsRequest struct {
	VersionId   []string                      `protobuf:"bytes,1,rep,name=version_id,json=versionId" json:"version_id,omitempty"`
	AppId       []string                      `protobuf:"bytes,2,rep,name=app_id,json=appId" json:"app_id,omitempty"`
	Name        []string                      `protobuf:"bytes,3,rep,name=name" json:"name,omitempty"`
	Owner       []string                      `protobuf:"bytes,4,rep,name=owner" json:"owner,omitempty"`
	Description []string                      `protobuf:"bytes,5,rep,name=description" json:"description,omitempty"`
	PackageName []string                      `protobuf:"bytes,6,rep,name=package_name,json=packageName" json:"package_name,omitempty"`
	Status      []string                      `protobuf:"bytes,7,rep,name=status" json:"status,omitempty"`
	SearchWord  *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Limit       uint32                        `protobuf:"varint,9,opt,name=limit" json:"limit,omitempty"`
	Offset      uint32                        `protobuf:"varint,10,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeAppVersionsRequest) Reset()                    { *m = DescribeAppVersionsRequest{} }
func (m *DescribeAppVersionsRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeAppVersionsRequest) ProtoMessage()               {}
func (*DescribeAppVersionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *DescribeAppVersionsRequest) GetVersionId() []string {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetAppId() []string {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetDescription() []string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetPackageName() []string {
	if m != nil {
		return m.PackageName
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetSearchWord() *google_protobuf2.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeAppVersionsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeAppVersionsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeAppVersionsResponse struct {
	TotalCount    uint32        `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	AppVersionSet []*AppVersion `protobuf:"bytes,2,rep,name=app_version_set,json=appVersionSet" json:"app_version_set,omitempty"`
}

func (m *DescribeAppVersionsResponse) Reset()                    { *m = DescribeAppVersionsResponse{} }
func (m *DescribeAppVersionsResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeAppVersionsResponse) ProtoMessage()               {}
func (*DescribeAppVersionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *DescribeAppVersionsResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeAppVersionsResponse) GetAppVersionSet() []*AppVersion {
	if m != nil {
		return m.AppVersionSet
	}
	return nil
}

type GetAppVersionPackageRequest struct {
	VersionId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
}

func (m *GetAppVersionPackageRequest) Reset()                    { *m = GetAppVersionPackageRequest{} }
func (m *GetAppVersionPackageRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAppVersionPackageRequest) ProtoMessage()               {}
func (*GetAppVersionPackageRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *GetAppVersionPackageRequest) GetVersionId() *google_protobuf2.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

type GetAppVersionPackageResponse struct {
	Package []byte `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
}

func (m *GetAppVersionPackageResponse) Reset()                    { *m = GetAppVersionPackageResponse{} }
func (m *GetAppVersionPackageResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAppVersionPackageResponse) ProtoMessage()               {}
func (*GetAppVersionPackageResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *GetAppVersionPackageResponse) GetPackage() []byte {
	if m != nil {
		return m.Package
	}
	return nil
}

type DescribeCategoryRequest struct {
	SearchWord *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Limit      uint32                        `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset     uint32                        `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	CategoryId []string                      `protobuf:"bytes,4,rep,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       []string                      `protobuf:"bytes,5,rep,name=name" json:"name,omitempty"`
	Owner      []string                      `protobuf:"bytes,6,rep,name=owner" json:"owner,omitempty"`
}

func (m *DescribeCategoryRequest) Reset()                    { *m = DescribeCategoryRequest{} }
func (m *DescribeCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeCategoryRequest) ProtoMessage()               {}
func (*DescribeCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *DescribeCategoryRequest) GetSearchWord() *google_protobuf2.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeCategoryRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeCategoryRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeCategoryRequest) GetCategoryId() []string {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *DescribeCategoryRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DescribeCategoryRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

type DescribeCategoryResponse struct {
	TotalCount  uint32      `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	CategorySet []*Category `protobuf:"bytes,2,rep,name=category_set,json=categorySet" json:"category_set,omitempty"`
}

func (m *DescribeCategoryResponse) Reset()                    { *m = DescribeCategoryResponse{} }
func (m *DescribeCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeCategoryResponse) ProtoMessage()               {}
func (*DescribeCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *DescribeCategoryResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeCategoryResponse) GetCategorySet() []*Category {
	if m != nil {
		return m.CategorySet
	}
	return nil
}

type CreateCategoryRequest struct {
	Name   *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Locale *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=locale" json:"locale,omitempty"`
}

func (m *CreateCategoryRequest) Reset()                    { *m = CreateCategoryRequest{} }
func (m *CreateCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryRequest) ProtoMessage()               {}
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *CreateCategoryRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateCategoryRequest) GetLocale() *google_protobuf2.StringValue {
	if m != nil {
		return m.Locale
	}
	return nil
}

type CreateCategoryResponse struct {
	Category *Category `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
}

func (m *CreateCategoryResponse) Reset()                    { *m = CreateCategoryResponse{} }
func (m *CreateCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryResponse) ProtoMessage()               {}
func (*CreateCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *CreateCategoryResponse) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type ModifyCategoryRequest struct {
	CategoryId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Locale     *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=locale" json:"locale,omitempty"`
}

func (m *ModifyCategoryRequest) Reset()                    { *m = ModifyCategoryRequest{} }
func (m *ModifyCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyCategoryRequest) ProtoMessage()               {}
func (*ModifyCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *ModifyCategoryRequest) GetCategoryId() *google_protobuf2.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *ModifyCategoryRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyCategoryRequest) GetLocale() *google_protobuf2.StringValue {
	if m != nil {
		return m.Locale
	}
	return nil
}

type ModifyCategoryResponse struct {
	Category *Category `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
}

func (m *ModifyCategoryResponse) Reset()                    { *m = ModifyCategoryResponse{} }
func (m *ModifyCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyCategoryResponse) ProtoMessage()               {}
func (*ModifyCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *ModifyCategoryResponse) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type DeleteCategoryRequest struct {
	CategoryId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *DeleteCategoryRequest) Reset()                    { *m = DeleteCategoryRequest{} }
func (m *DeleteCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteCategoryRequest) ProtoMessage()               {}
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *DeleteCategoryRequest) GetCategoryId() *google_protobuf2.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

type DeleteCategoryResponse struct {
	Category *Category `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
}

func (m *DeleteCategoryResponse) Reset()                    { *m = DeleteCategoryResponse{} }
func (m *DeleteCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteCategoryResponse) ProtoMessage()               {}
func (*DeleteCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *DeleteCategoryResponse) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateAppRequest)(nil), "openpitrix.CreateAppRequest")
	proto.RegisterType((*CreateAppResponse)(nil), "openpitrix.CreateAppResponse")
	proto.RegisterType((*ModifyAppRequest)(nil), "openpitrix.ModifyAppRequest")
	proto.RegisterType((*ModifyAppResponse)(nil), "openpitrix.ModifyAppResponse")
	proto.RegisterType((*DeleteAppRequest)(nil), "openpitrix.DeleteAppRequest")
	proto.RegisterType((*DeleteAppResponse)(nil), "openpitrix.DeleteAppResponse")
	proto.RegisterType((*App)(nil), "openpitrix.App")
	proto.RegisterType((*AppCategory)(nil), "openpitrix.AppCategory")
	proto.RegisterType((*Category)(nil), "openpitrix.Category")
	proto.RegisterType((*DescribeAppsRequest)(nil), "openpitrix.DescribeAppsRequest")
	proto.RegisterType((*DescribeAppsResponse)(nil), "openpitrix.DescribeAppsResponse")
	proto.RegisterType((*CreateAppVersionRequest)(nil), "openpitrix.CreateAppVersionRequest")
	proto.RegisterType((*CreateAppVersionResponse)(nil), "openpitrix.CreateAppVersionResponse")
	proto.RegisterType((*ModifyAppVersionRequest)(nil), "openpitrix.ModifyAppVersionRequest")
	proto.RegisterType((*ModifyAppVersionResponse)(nil), "openpitrix.ModifyAppVersionResponse")
	proto.RegisterType((*DeleteAppVersionRequest)(nil), "openpitrix.DeleteAppVersionRequest")
	proto.RegisterType((*DeleteAppVersionResponse)(nil), "openpitrix.DeleteAppVersionResponse")
	proto.RegisterType((*AppVersion)(nil), "openpitrix.AppVersion")
	proto.RegisterType((*DescribeAppVersionsRequest)(nil), "openpitrix.DescribeAppVersionsRequest")
	proto.RegisterType((*DescribeAppVersionsResponse)(nil), "openpitrix.DescribeAppVersionsResponse")
	proto.RegisterType((*GetAppVersionPackageRequest)(nil), "openpitrix.GetAppVersionPackageRequest")
	proto.RegisterType((*GetAppVersionPackageResponse)(nil), "openpitrix.GetAppVersionPackageResponse")
	proto.RegisterType((*DescribeCategoryRequest)(nil), "openpitrix.DescribeCategoryRequest")
	proto.RegisterType((*DescribeCategoryResponse)(nil), "openpitrix.DescribeCategoryResponse")
	proto.RegisterType((*CreateCategoryRequest)(nil), "openpitrix.CreateCategoryRequest")
	proto.RegisterType((*CreateCategoryResponse)(nil), "openpitrix.CreateCategoryResponse")
	proto.RegisterType((*ModifyCategoryRequest)(nil), "openpitrix.ModifyCategoryRequest")
	proto.RegisterType((*ModifyCategoryResponse)(nil), "openpitrix.ModifyCategoryResponse")
	proto.RegisterType((*DeleteCategoryRequest)(nil), "openpitrix.DeleteCategoryRequest")
	proto.RegisterType((*DeleteCategoryResponse)(nil), "openpitrix.DeleteCategoryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AppManager service

type AppManagerClient interface {
	CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*CreateAppResponse, error)
	DescribeApps(ctx context.Context, in *DescribeAppsRequest, opts ...grpc.CallOption) (*DescribeAppsResponse, error)
	ModifyApp(ctx context.Context, in *ModifyAppRequest, opts ...grpc.CallOption) (*ModifyAppResponse, error)
	DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...grpc.CallOption) (*DeleteAppResponse, error)
	CreateAppVersion(ctx context.Context, in *CreateAppVersionRequest, opts ...grpc.CallOption) (*CreateAppVersionResponse, error)
	DescribeAppVersions(ctx context.Context, in *DescribeAppVersionsRequest, opts ...grpc.CallOption) (*DescribeAppVersionsResponse, error)
	ModifyAppVersion(ctx context.Context, in *ModifyAppVersionRequest, opts ...grpc.CallOption) (*ModifyAppVersionResponse, error)
	DeleteAppVersion(ctx context.Context, in *DeleteAppVersionRequest, opts ...grpc.CallOption) (*DeleteAppVersionResponse, error)
	GetAppVersionPackage(ctx context.Context, in *GetAppVersionPackageRequest, opts ...grpc.CallOption) (*GetAppVersionPackageResponse, error)
	DescribeCategory(ctx context.Context, in *DescribeCategoryRequest, opts ...grpc.CallOption) (*DescribeCategoryResponse, error)
	CreateCategory(ctx context.Context, in *CreateCategoryRequest, opts ...grpc.CallOption) (*CreateCategoryResponse, error)
	ModifyCategory(ctx context.Context, in *ModifyCategoryRequest, opts ...grpc.CallOption) (*ModifyCategoryResponse, error)
	DeleteCategory(ctx context.Context, in *DeleteCategoryRequest, opts ...grpc.CallOption) (*DeleteCategoryResponse, error)
}

type appManagerClient struct {
	cc *grpc.ClientConn
}

func NewAppManagerClient(cc *grpc.ClientConn) AppManagerClient {
	return &appManagerClient{cc}
}

func (c *appManagerClient) CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*CreateAppResponse, error) {
	out := new(CreateAppResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/CreateApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DescribeApps(ctx context.Context, in *DescribeAppsRequest, opts ...grpc.CallOption) (*DescribeAppsResponse, error) {
	out := new(DescribeAppsResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/DescribeApps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) ModifyApp(ctx context.Context, in *ModifyAppRequest, opts ...grpc.CallOption) (*ModifyAppResponse, error) {
	out := new(ModifyAppResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/ModifyApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...grpc.CallOption) (*DeleteAppResponse, error) {
	out := new(DeleteAppResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/DeleteApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) CreateAppVersion(ctx context.Context, in *CreateAppVersionRequest, opts ...grpc.CallOption) (*CreateAppVersionResponse, error) {
	out := new(CreateAppVersionResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/CreateAppVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DescribeAppVersions(ctx context.Context, in *DescribeAppVersionsRequest, opts ...grpc.CallOption) (*DescribeAppVersionsResponse, error) {
	out := new(DescribeAppVersionsResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/DescribeAppVersions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) ModifyAppVersion(ctx context.Context, in *ModifyAppVersionRequest, opts ...grpc.CallOption) (*ModifyAppVersionResponse, error) {
	out := new(ModifyAppVersionResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/ModifyAppVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DeleteAppVersion(ctx context.Context, in *DeleteAppVersionRequest, opts ...grpc.CallOption) (*DeleteAppVersionResponse, error) {
	out := new(DeleteAppVersionResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/DeleteAppVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) GetAppVersionPackage(ctx context.Context, in *GetAppVersionPackageRequest, opts ...grpc.CallOption) (*GetAppVersionPackageResponse, error) {
	out := new(GetAppVersionPackageResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/GetAppVersionPackage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DescribeCategory(ctx context.Context, in *DescribeCategoryRequest, opts ...grpc.CallOption) (*DescribeCategoryResponse, error) {
	out := new(DescribeCategoryResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/DescribeCategory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) CreateCategory(ctx context.Context, in *CreateCategoryRequest, opts ...grpc.CallOption) (*CreateCategoryResponse, error) {
	out := new(CreateCategoryResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/CreateCategory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) ModifyCategory(ctx context.Context, in *ModifyCategoryRequest, opts ...grpc.CallOption) (*ModifyCategoryResponse, error) {
	out := new(ModifyCategoryResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/ModifyCategory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DeleteCategory(ctx context.Context, in *DeleteCategoryRequest, opts ...grpc.CallOption) (*DeleteCategoryResponse, error) {
	out := new(DeleteCategoryResponse)
	err := grpc.Invoke(ctx, "/openpitrix.AppManager/DeleteCategory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AppManager service

type AppManagerServer interface {
	CreateApp(context.Context, *CreateAppRequest) (*CreateAppResponse, error)
	DescribeApps(context.Context, *DescribeAppsRequest) (*DescribeAppsResponse, error)
	ModifyApp(context.Context, *ModifyAppRequest) (*ModifyAppResponse, error)
	DeleteApp(context.Context, *DeleteAppRequest) (*DeleteAppResponse, error)
	CreateAppVersion(context.Context, *CreateAppVersionRequest) (*CreateAppVersionResponse, error)
	DescribeAppVersions(context.Context, *DescribeAppVersionsRequest) (*DescribeAppVersionsResponse, error)
	ModifyAppVersion(context.Context, *ModifyAppVersionRequest) (*ModifyAppVersionResponse, error)
	DeleteAppVersion(context.Context, *DeleteAppVersionRequest) (*DeleteAppVersionResponse, error)
	GetAppVersionPackage(context.Context, *GetAppVersionPackageRequest) (*GetAppVersionPackageResponse, error)
	DescribeCategory(context.Context, *DescribeCategoryRequest) (*DescribeCategoryResponse, error)
	CreateCategory(context.Context, *CreateCategoryRequest) (*CreateCategoryResponse, error)
	ModifyCategory(context.Context, *ModifyCategoryRequest) (*ModifyCategoryResponse, error)
	DeleteCategory(context.Context, *DeleteCategoryRequest) (*DeleteCategoryResponse, error)
}

func RegisterAppManagerServer(s *grpc.Server, srv AppManagerServer) {
	s.RegisterService(&_AppManager_serviceDesc, srv)
}

func _AppManager_CreateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).CreateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/CreateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).CreateApp(ctx, req.(*CreateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DescribeApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DescribeApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/DescribeApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DescribeApps(ctx, req.(*DescribeAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_ModifyApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).ModifyApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/ModifyApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).ModifyApp(ctx, req.(*ModifyAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DeleteApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DeleteApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/DeleteApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DeleteApp(ctx, req.(*DeleteAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_CreateAppVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).CreateAppVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/CreateAppVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).CreateAppVersion(ctx, req.(*CreateAppVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DescribeAppVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeAppVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DescribeAppVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/DescribeAppVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DescribeAppVersions(ctx, req.(*DescribeAppVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_ModifyAppVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyAppVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).ModifyAppVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/ModifyAppVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).ModifyAppVersion(ctx, req.(*ModifyAppVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DeleteAppVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DeleteAppVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/DeleteAppVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DeleteAppVersion(ctx, req.(*DeleteAppVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_GetAppVersionPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppVersionPackageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).GetAppVersionPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/GetAppVersionPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).GetAppVersionPackage(ctx, req.(*GetAppVersionPackageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DescribeCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DescribeCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/DescribeCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DescribeCategory(ctx, req.(*DescribeCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_CreateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).CreateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/CreateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).CreateCategory(ctx, req.(*CreateCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_ModifyCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).ModifyCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/ModifyCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).ModifyCategory(ctx, req.(*ModifyCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DeleteCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DeleteCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.AppManager/DeleteCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DeleteCategory(ctx, req.(*DeleteCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.AppManager",
	HandlerType: (*AppManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApp",
			Handler:    _AppManager_CreateApp_Handler,
		},
		{
			MethodName: "DescribeApps",
			Handler:    _AppManager_DescribeApps_Handler,
		},
		{
			MethodName: "ModifyApp",
			Handler:    _AppManager_ModifyApp_Handler,
		},
		{
			MethodName: "DeleteApp",
			Handler:    _AppManager_DeleteApp_Handler,
		},
		{
			MethodName: "CreateAppVersion",
			Handler:    _AppManager_CreateAppVersion_Handler,
		},
		{
			MethodName: "DescribeAppVersions",
			Handler:    _AppManager_DescribeAppVersions_Handler,
		},
		{
			MethodName: "ModifyAppVersion",
			Handler:    _AppManager_ModifyAppVersion_Handler,
		},
		{
			MethodName: "DeleteAppVersion",
			Handler:    _AppManager_DeleteAppVersion_Handler,
		},
		{
			MethodName: "GetAppVersionPackage",
			Handler:    _AppManager_GetAppVersionPackage_Handler,
		},
		{
			MethodName: "DescribeCategory",
			Handler:    _AppManager_DescribeCategory_Handler,
		},
		{
			MethodName: "CreateCategory",
			Handler:    _AppManager_CreateCategory_Handler,
		},
		{
			MethodName: "ModifyCategory",
			Handler:    _AppManager_ModifyCategory_Handler,
		},
		{
			MethodName: "DeleteCategory",
			Handler:    _AppManager_DeleteCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}

func init() { proto.RegisterFile("app.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1719 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xcd, 0x6f, 0x1b, 0x45,
	0x1b, 0x7f, 0xfd, 0x19, 0xfb, 0xb1, 0xf3, 0xd1, 0x69, 0x3e, 0xb6, 0x6e, 0xfa, 0xc6, 0xd9, 0xbe,
	0xea, 0x1b, 0x22, 0x9a, 0x14, 0x37, 0xb4, 0xa8, 0x55, 0x8b, 0x4c, 0x2b, 0x55, 0xad, 0x54, 0x84,
	0x52, 0x14, 0xa4, 0x5e, 0xa2, 0x89, 0x3d, 0x71, 0x56, 0xd8, 0xbb, 0xc3, 0xee, 0xa4, 0xa1, 0x17,
	0x10, 0x1c, 0xb8, 0x13, 0x4e, 0xfc, 0x03, 0x1c, 0xb9, 0x71, 0x84, 0x23, 0x77, 0x40, 0x42, 0xe2,
	0x04, 0x87, 0x1e, 0x38, 0xf3, 0x17, 0xa0, 0x99, 0x9d, 0xfd, 0x98, 0xd9, 0x75, 0xb3, 0xb6, 0x23,
	0x68, 0xa5, 0x9e, 0x12, 0xcf, 0x3c, 0xcf, 0xec, 0x6f, 0x7f, 0xcf, 0xd7, 0x6f, 0x6c, 0xa8, 0x62,
	0x4a, 0x37, 0xa8, 0xeb, 0x30, 0x07, 0x81, 0x43, 0x89, 0x4d, 0x2d, 0xe6, 0x5a, 0x1f, 0x37, 0xfe,
	0xdb, 0x73, 0x9c, 0x5e, 0x9f, 0x6c, 0x8a, 0x9d, 0xbd, 0xc3, 0xfd, 0xcd, 0x23, 0x17, 0x53, 0x4a,
	0x5c, 0xcf, 0xb7, 0x6d, 0xac, 0xe8, 0xfb, 0xcc, 0x1a, 0x10, 0x8f, 0xe1, 0x81, 0x3c, 0xac, 0xb1,
	0x2c, 0x0d, 0x30, 0xb5, 0x36, 0xb1, 0x6d, 0x3b, 0x0c, 0x33, 0xcb, 0xb1, 0x03, 0xf7, 0xd7, 0xc5,
	0x9f, 0xce, 0xe5, 0x1e, 0xb1, 0x2f, 0x7b, 0x47, 0xb8, 0xd7, 0x23, 0xee, 0xa6, 0x43, 0x85, 0x45,
	0xd2, 0xda, 0xfc, 0xb3, 0x04, 0x73, 0x77, 0x5c, 0x82, 0x19, 0x69, 0x53, 0xba, 0x4d, 0x3e, 0x3a,
	0x24, 0x1e, 0x43, 0xaf, 0x41, 0x6e, 0xd7, 0xc8, 0x35, 0x73, 0x6b, 0xb5, 0xd6, 0xf2, 0x86, 0xff,
	0xb0, 0x8d, 0x00, 0xcd, 0xc6, 0x23, 0xe6, 0x5a, 0x76, 0x6f, 0x07, 0xf7, 0x0f, 0xc9, 0xf6, 0x7f,
	0xd0, 0x15, 0x28, 0xda, 0x78, 0x40, 0x8c, 0x7c, 0x06, 0x6b, 0x61, 0x89, 0xde, 0x84, 0x29, 0x97,
	0x50, 0x67, 0xd7, 0xea, 0x1a, 0x85, 0x0c, 0x4e, 0x65, 0x6e, 0x7c, 0xbf, 0x8b, 0x5a, 0x50, 0x72,
	0x8e, 0x6c, 0xe2, 0x1a, 0xc5, 0x0c, 0x4e, 0xbe, 0x29, 0xba, 0x09, 0xd0, 0x39, 0xc0, 0x2e, 0xdb,
	0x15, 0x10, 0x4b, 0x19, 0x1c, 0xab, 0xc2, 0xfe, 0x5d, 0x8e, 0xf3, 0x36, 0xd4, 0xba, 0xc4, 0xeb,
	0xb8, 0x96, 0xe0, 0xce, 0x28, 0x67, 0xf0, 0x8e, 0x3b, 0x70, 0x66, 0x0e, 0x9c, 0x01, 0x31, 0x2a,
	0x59, 0x98, 0xe1, 0x96, 0xdc, 0xc3, 0xea, 0x38, 0xb6, 0x51, 0xcd, 0xe2, 0xc1, 0x2d, 0x39, 0x46,
	0xaf, 0xe3, 0x12, 0x62, 0x7b, 0x07, 0x0e, 0xf3, 0x0c, 0xc8, 0x82, 0x31, 0xe6, 0xc0, 0xfd, 0x07,
	0xd8, 0xb2, 0x19, 0xb6, 0x6c, 0xe2, 0x7a, 0x46, 0x2d, 0x8b, 0x7f, 0xcc, 0x01, 0x5d, 0x83, 0x29,
	0xcf, 0x39, 0x74, 0x3b, 0xc4, 0x33, 0xea, 0x19, 0x7c, 0x03, 0x63, 0xb4, 0x05, 0x65, 0x97, 0xe0,
	0xee, 0x80, 0x18, 0xd3, 0xd9, 0x52, 0x80, 0xdb, 0xa2, 0x5b, 0x50, 0xeb, 0x60, 0x46, 0x7a, 0x8e,
	0xfb, 0x94, 0x67, 0xcf, 0x4c, 0x06, 0x57, 0x08, 0x1c, 0xee, 0x77, 0xcd, 0x6b, 0x70, 0x26, 0x96,
	0xe9, 0x1e, 0x75, 0x6c, 0x8f, 0xa0, 0x55, 0x28, 0x60, 0x4a, 0x65, 0xb2, 0xcf, 0x6e, 0x44, 0x65,
	0xba, 0xc1, 0xad, 0xf8, 0x9e, 0xf9, 0x57, 0x09, 0xe6, 0x1e, 0x3a, 0x5d, 0x6b, 0xff, 0x69, 0xac,
	0x44, 0xae, 0x42, 0x19, 0x53, 0xca, 0x61, 0x64, 0xa9, 0x93, 0x12, 0xa6, 0xf4, 0x7e, 0xf7, 0x55,
	0xb1, 0xbc, 0x2a, 0x96, 0x97, 0xa8, 0x58, 0x62, 0x39, 0x9f, 0xbd, 0x58, 0xee, 0xc1, 0xdc, 0x5d,
	0xd2, 0x27, 0xca, 0x38, 0x19, 0xa7, 0x56, 0x38, 0x80, 0xd8, 0x41, 0xd9, 0x01, 0xfc, 0x3a, 0x05,
	0x85, 0x36, 0xa5, 0x2f, 0x78, 0x81, 0x6a, 0xf5, 0x52, 0x1c, 0xb5, 0x5e, 0xb6, 0xa0, 0xec, 0x31,
	0xcc, 0x0e, 0xbd, 0x4c, 0x85, 0x2a, 0x6d, 0xc3, 0x2a, 0x2b, 0x8f, 0x5c, 0x65, 0x53, 0xe3, 0x56,
	0x59, 0x65, 0xc2, 0x2a, 0xab, 0x4e, 0x50, 0x65, 0x30, 0x5e, 0x95, 0xd5, 0x46, 0xa8, 0x32, 0xb5,
	0x69, 0xd6, 0x47, 0x6b, 0x9a, 0x61, 0x97, 0x9e, 0x1e, 0xa5, 0x4b, 0xd7, 0x3a, 0x62, 0x88, 0xed,
	0x72, 0x55, 0x28, 0xcb, 0xba, 0x91, 0xf0, 0x7c, 0x3f, 0x90, 0x8c, 0xdb, 0xe0, 0x9b, 0xf3, 0x05,
	0xee, 0xec, 0x67, 0x82, 0xef, 0x3c, 0x7b, 0xb2, 0xb3, 0x6f, 0x1e, 0x38, 0x1f, 0xd2, 0x6e, 0xf8,
	0xe4, 0xb9, 0x93, 0x9d, 0x7d, 0x73, 0xe1, 0xdc, 0x86, 0x39, 0x5e, 0x8d, 0x61, 0x47, 0xf2, 0x08,
	0x33, 0xce, 0x34, 0x0b, 0x6b, 0xb5, 0xd6, 0x92, 0x56, 0xc5, 0x77, 0xa4, 0xc9, 0xf6, 0x0c, 0x8e,
	0x3e, 0x3c, 0x22, 0xcc, 0x7c, 0x96, 0x87, 0x5a, 0x6c, 0x5f, 0x6f, 0x70, 0xb9, 0xd1, 0x1a, 0xdc,
	0x18, 0xa5, 0xbe, 0x05, 0xe5, 0xbe, 0xd3, 0xc1, 0x7d, 0x92, 0xad, 0xd2, 0x7d, 0xdb, 0x58, 0xa5,
	0x16, 0x47, 0xa8, 0x54, 0x2d, 0xcc, 0xa5, 0x49, 0xc2, 0x5c, 0x1e, 0x25, 0xcc, 0xe6, 0xef, 0x79,
	0xa8, 0xbc, 0x6c, 0x1c, 0x8f, 0x27, 0x77, 0x26, 0x63, 0x38, 0x5e, 0x0b, 0xe5, 0x51, 0x6a, 0xc1,
	0xfc, 0x2d, 0x0f, 0x67, 0xef, 0x8a, 0x5e, 0xbe, 0xc7, 0x87, 0x9b, 0x17, 0x8c, 0xc9, 0x5b, 0x50,
	0xf3, 0x08, 0x76, 0x3b, 0x07, 0xbb, 0x47, 0x8e, 0x9b, 0x91, 0x6c, 0xdf, 0xe1, 0x03, 0xc7, 0xed,
	0xa2, 0x79, 0x28, 0xf5, 0xad, 0x81, 0xc5, 0x04, 0xdb, 0xd3, 0xdb, 0xfe, 0x07, 0xb4, 0x08, 0x65,
	0x67, 0x7f, 0x9f, 0x97, 0x5b, 0x41, 0x2c, 0xcb, 0x4f, 0x68, 0x21, 0x1c, 0x8f, 0xc5, 0x66, 0x61,
	0xad, 0x1a, 0x0c, 0x40, 0x24, 0x23, 0x56, 0x12, 0x8b, 0x7e, 0x4c, 0x96, 0xa2, 0x11, 0x57, 0x16,
	0xcb, 0xc1, 0x10, 0x5b, 0x0c, 0x53, 0x7b, 0xca, 0x5f, 0x97, 0xc9, 0x3b, 0x1f, 0x84, 0xa3, 0xe2,
	0x1f, 0xed, 0x13, 0x7e, 0x41, 0x69, 0x95, 0x55, 0xb1, 0x15, 0x6b, 0x86, 0x2b, 0x6a, 0xaa, 0x81,
	0xd8, 0x8f, 0x27, 0xd3, 0x45, 0x98, 0x0e, 0x0d, 0xc4, 0x11, 0x35, 0x61, 0x52, 0x0f, 0x16, 0xf9,
	0x29, 0x26, 0x86, 0x79, 0x95, 0x5a, 0x29, 0x1c, 0x56, 0xa0, 0xc6, 0x1c, 0x86, 0xfb, 0xbb, 0x1d,
	0xe7, 0xd0, 0x66, 0x82, 0xdb, 0xe9, 0x6d, 0x10, 0x4b, 0x77, 0xf8, 0x0a, 0x5a, 0x83, 0x29, 0xce,
	0x07, 0x27, 0x2a, 0x2f, 0xfa, 0x52, 0x42, 0x5d, 0x70, 0xbe, 0x78, 0x1f, 0xfa, 0x23, 0x0f, 0x4b,
	0xe1, 0x3d, 0x62, 0x87, 0xb8, 0x9e, 0xe5, 0xd8, 0x63, 0x5c, 0x9c, 0x23, 0x7d, 0x92, 0xcf, 0xae,
	0x4f, 0xc2, 0x44, 0x2f, 0x64, 0x4f, 0xf4, 0xa0, 0x08, 0x8b, 0x99, 0x8b, 0xf0, 0x6d, 0xa8, 0x53,
	0xdc, 0xf9, 0x10, 0xf7, 0x48, 0xf6, 0xbb, 0x40, 0x4d, 0x7a, 0x9c, 0xc6, 0x6d, 0xc0, 0x7c, 0x04,
	0x46, 0x92, 0x61, 0x19, 0xc9, 0xeb, 0x50, 0xe3, 0xbc, 0x3d, 0xf1, 0x97, 0x25, 0xd9, 0x8b, 0x5a,
	0xb0, 0x02, 0x27, 0xc0, 0xe1, 0xff, 0xe6, 0xf7, 0x79, 0x58, 0x0a, 0x25, 0xad, 0x16, 0xb7, 0x9b,
	0x00, 0xf2, 0xc0, 0xac, 0x6d, 0xae, 0x2a, 0xed, 0xc7, 0xea, 0x72, 0x3a, 0xc1, 0x85, 0x51, 0x09,
	0x1e, 0xa7, 0xe1, 0x69, 0x41, 0x29, 0x8d, 0x11, 0x94, 0x24, 0x7d, 0x93, 0x06, 0x65, 0x07, 0x96,
	0x42, 0x95, 0x7f, 0x8a, 0x31, 0xe1, 0x60, 0x93, 0xe7, 0x4e, 0x0a, 0xf6, 0xe7, 0x22, 0x40, 0xb4,
	0x35, 0x59, 0xd2, 0xbc, 0xc0, 0xe5, 0x3f, 0x61, 0xa2, 0x24, 0xb2, 0xbb, 0x3c, 0x6a, 0x76, 0x6f,
	0xc5, 0xe6, 0xca, 0xd8, 0x92, 0xa9, 0x32, 0x89, 0x64, 0xaa, 0x4e, 0xa2, 0x8c, 0x61, 0x24, 0x35,
	0xf0, 0x63, 0x1e, 0x1a, 0xb1, 0x91, 0x25, 0x93, 0x2b, 0x14, 0x05, 0x17, 0xb4, 0x24, 0x13, 0x53,
	0x33, 0x4a, 0xa3, 0x85, 0x58, 0x1a, 0xa5, 0x8c, 0xf1, 0x42, 0x6c, 0x8c, 0xcf, 0x47, 0x3d, 0x23,
	0x36, 0x95, 0x9b, 0x7a, 0xb0, 0xf9, 0x9e, 0x12, 0xce, 0xd5, 0x44, 0x38, 0x85, 0x49, 0x3c, 0x60,
	0xc3, 0x84, 0x80, 0xa6, 0x68, 0x2a, 0xe3, 0x2a, 0x9a, 0x6a, 0xba, 0xa2, 0x81, 0xb8, 0xa2, 0x31,
	0x3f, 0x81, 0xf3, 0xa9, 0x3c, 0x66, 0x55, 0x00, 0xb7, 0x61, 0x36, 0xd6, 0x16, 0x62, 0x4a, 0x60,
	0x58, 0x6b, 0x98, 0x8e, 0x5a, 0x03, 0xd7, 0x05, 0x8f, 0xe1, 0xfc, 0x3d, 0xc2, 0xa2, 0xfd, 0xf7,
	0x7c, 0x82, 0x4e, 0xa5, 0x9d, 0xbd, 0x05, 0xcb, 0xe9, 0x67, 0xcb, 0x97, 0x33, 0x60, 0x4a, 0xc6,
	0x43, 0x9c, 0x5c, 0xdf, 0x0e, 0x3e, 0x9a, 0x3f, 0xe5, 0x78, 0x87, 0xf5, 0x69, 0x09, 0xaf, 0x56,
	0xff, 0x86, 0xe0, 0xd4, 0xf4, 0x5d, 0x31, 0xa1, 0xef, 0xd2, 0xa4, 0x67, 0x98, 0xb3, 0xe5, 0x58,
	0xce, 0x9a, 0x8c, 0x37, 0x77, 0xfd, 0x95, 0xb2, 0x86, 0xf9, 0x3a, 0xd4, 0x95, 0x5b, 0xa8, 0x1f,
	0xe3, 0xf9, 0x78, 0x8c, 0xc3, 0x43, 0x43, 0xc4, 0x3c, 0xbe, 0x9f, 0xc2, 0x82, 0x2f, 0x4a, 0x74,
	0x1a, 0xff, 0xa1, 0x5b, 0x8e, 0xf9, 0x00, 0x16, 0x75, 0x00, 0xf2, 0xa5, 0xaf, 0x40, 0x25, 0x40,
	0x2a, 0xa3, 0x98, 0xfe, 0x3e, 0xa1, 0x95, 0xf9, 0x43, 0x0e, 0x16, 0xfc, 0x69, 0x9e, 0x92, 0x14,
	0x2f, 0xc1, 0x95, 0x8f, 0x93, 0xa1, 0xe3, 0x1f, 0x9b, 0x8c, 0x1d, 0x58, 0xf0, 0xc5, 0xc2, 0xe9,
	0x72, 0xc1, 0x31, 0xea, 0xe7, 0x8e, 0x8b, 0xb1, 0xf5, 0xed, 0x8c, 0xd0, 0x1e, 0x0f, 0xb1, 0x8d,
	0x7b, 0xc4, 0x45, 0x7d, 0xa8, 0x86, 0x0a, 0x19, 0x2d, 0x2b, 0xbe, 0xda, 0x8f, 0x79, 0x8d, 0x0b,
	0x43, 0x76, 0x7d, 0x28, 0xa6, 0x79, 0xdc, 0xae, 0x23, 0x39, 0x0a, 0x9b, 0x98, 0xd2, 0xcf, 0x7f,
	0x79, 0xf6, 0x55, 0x7e, 0xda, 0xac, 0x6c, 0x3e, 0x79, 0x63, 0x13, 0x53, 0xea, 0xdd, 0xc8, 0xad,
	0xa3, 0xcf, 0x72, 0x50, 0x8f, 0x5f, 0xab, 0xd0, 0x4a, 0xfc, 0xcc, 0x94, 0xbb, 0x6c, 0xa3, 0x39,
	0xdc, 0x40, 0x3e, 0x77, 0xe3, 0xb8, 0x7d, 0x1e, 0x9d, 0xeb, 0xca, 0x2d, 0xfe, 0x64, 0xaf, 0x79,
	0x64, 0xb1, 0x83, 0xe6, 0xbe, 0xd5, 0x67, 0xc4, 0x15, 0x30, 0x00, 0x85, 0x30, 0xf8, 0x1b, 0x87,
	0xf2, 0x53, 0x7d, 0x63, 0xfd, 0xb7, 0x19, 0xf5, 0x8d, 0x13, 0xdf, 0x62, 0xcb, 0x37, 0x1e, 0x88,
	0xf5, 0xe8, 0x8d, 0x5b, 0xca, 0x1b, 0xf7, 0xa1, 0x1a, 0xea, 0x47, 0xf5, 0x69, 0xfa, 0xb7, 0xdb,
	0xea, 0xd3, 0x12, 0x5f, 0x59, 0xcb, 0xa7, 0x75, 0xc5, 0x7a, 0xf4, 0xb4, 0x75, 0xe5, 0x69, 0x5f,
	0xe6, 0x62, 0x3f, 0xc2, 0x06, 0xf2, 0xf2, 0x62, 0x6a, 0xdc, 0x54, 0x91, 0xdc, 0xf8, 0xdf, 0xf3,
	0x8d, 0x24, 0x86, 0xd6, 0x71, 0x7b, 0x1e, 0xa1, 0x28, 0xc6, 0x4d, 0x39, 0x59, 0x04, 0x96, 0x05,
	0x73, 0x4e, 0x62, 0x09, 0x66, 0x9f, 0xc0, 0xf4, 0x4d, 0x4e, 0xf9, 0x96, 0x22, 0x98, 0xa7, 0xe8,
	0xd2, 0x90, 0xc8, 0x6a, 0xc2, 0xa5, 0xf1, 0xff, 0x13, 0xed, 0x24, 0xb8, 0xdb, 0xc7, 0xed, 0x8b,
	0x68, 0x35, 0x9e, 0x08, 0x01, 0xbc, 0x64, 0x42, 0x20, 0x94, 0xc0, 0x2a, 0xc8, 0xd3, 0x2f, 0x26,
	0x2a, 0x79, 0x43, 0x6e, 0x7d, 0x2a, 0x79, 0xc3, 0xee, 0x36, 0x92, 0xbc, 0x28, 0x5d, 0x54, 0xf2,
	0x5a, 0xa9, 0xe4, 0x71, 0x4c, 0xfa, 0xfd, 0x43, 0xc5, 0x34, 0xe4, 0xd6, 0xa3, 0x62, 0x1a, 0x76,
	0x85, 0x91, 0x98, 0xa2, 0xa4, 0x52, 0x31, 0xad, 0xa7, 0x62, 0xfa, 0x2e, 0x07, 0xf3, 0x69, 0x22,
	0x02, 0x29, 0x91, 0x7a, 0x8e, 0x84, 0x69, 0xac, 0x9d, 0x6c, 0x28, 0xf1, 0x3d, 0x38, 0x6e, 0xaf,
	0xa1, 0x4b, 0x3d, 0xc2, 0x9a, 0xec, 0x80, 0x34, 0xa5, 0x16, 0x69, 0x76, 0x1c, 0x9b, 0x11, 0x9b,
	0x35, 0x9d, 0xfd, 0x04, 0xe6, 0x73, 0x68, 0x49, 0xc3, 0xbc, 0x29, 0xbd, 0xd0, 0xd7, 0x82, 0x4b,
	0x75, 0xdc, 0xeb, 0x5c, 0xa6, 0xea, 0x1b, 0x9d, 0xcb, 0x74, 0xc5, 0x60, 0xde, 0x38, 0x6e, 0xaf,
	0xa2, 0x95, 0x30, 0xff, 0x64, 0xc7, 0xb5, 0x48, 0x32, 0xfb, 0xe6, 0xd0, 0x0c, 0x07, 0x19, 0x59,
	0xa0, 0x2f, 0x72, 0x30, 0xa3, 0xce, 0x64, 0xb4, 0x9a, 0xac, 0x48, 0x1d, 0x97, 0xf9, 0x3c, 0x13,
	0x89, 0xea, 0xf2, 0x71, 0xfb, 0x0c, 0x9a, 0x95, 0x25, 0x1b, 0x4c, 0x01, 0x81, 0xe2, 0xac, 0xa9,
	0xa1, 0xe0, 0xc1, 0xe5, 0x40, 0xd4, 0x79, 0xa8, 0x02, 0x49, 0x9d, 0xf5, 0x2a, 0x90, 0xf4, 0x71,
	0x2a, 0x81, 0xc8, 0xf4, 0x57, 0x81, 0xb4, 0x86, 0x00, 0x51, 0x87, 0x9e, 0x0a, 0x24, 0x75, 0xd0,
	0xaa, 0x40, 0xd2, 0x67, 0xa6, 0x04, 0x22, 0x73, 0x5e, 0x05, 0xb2, 0x9e, 0x04, 0xf2, 0x4e, 0xf1,
	0x71, 0x9e, 0xee, 0xed, 0x95, 0xc5, 0x90, 0xbe, 0xfa, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3,
	0x98, 0x5f, 0xb8, 0x8b, 0x23, 0x00, 0x00,
}
